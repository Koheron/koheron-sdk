version: 2

jobs:
  build:
    docker:
      - image: circleci/python:2.7-stretch-browsers
      - image: circleci/node:10.11.0-stretch-browsers
    steps:
      - checkout
      - run:
          name: Append dev to source.list
          command: sudo bash -c "echo deb http://archive.ubuntu.com/ubuntu/ xenial main >> /etc/apt/sources.list"; sudo bash -c "echo deb-src http://archive.ubuntu.com/ubuntu/ xenial main >> /etc/apt/sources.list"
      - run:
          name: Install GCC
          command: sudo apt-get update; sudo apt-get install -y --allow-unauthenticated gcc-5 g++-5 gcc-5-arm-linux-gnueabihf g++-5-arm-linux-gnueabihf; sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 100; sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-5 100
      - run:
          name: Link GCC
          command: sudo ln -s /usr/bin/arm-linux-gnueabihf-gcc-5 /usr/bin/arm-linux-gnueabihf-gcc; sudo ln -s /usr/bin/arm-linux-gnueabihf-gcc-5 /usr/bin/arm-linux-gnueabihf-g++
      - run:
          name: Install python requirements
          command: sudo pip install -r requirements.txt
      - run:
          name: Install Koheron python
          command: sudo pip install python/.
      - run:
          name: Setup web
          command: curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -; sudo make setup_web
      - run:
          name: Build server
          command: sudo bash build_examples.sh server
      - run:
          name: Build web
          command: sudo bash build_examples.sh web
  deploy:
    docker:
      - image: circleci/python:2.7-stretch-browsers
    steps:
      - checkout
      - run:
          name: Install python requirements
          command: sudo pip install -r requirements.txt
      - run:
          name: install twine
          command: sudo pip install twine
      - run:
          name: Upload Koheron python to pypi
          command: sudo make PYPI_USERNAME=$PYPI_USERNAME PYPI_PASSWORD=$PYPI_PASSWORD upload_pip

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          filters:
            branches:
              only: master
