/// {{ driver.class_name|lower }}.cpp
///
/// Autogenerated DO NOT EDIT
///
/// (c) Koheron

#include "{{ driver.interface_name }}.hpp"

#include <commands.hpp>
#include <session.hpp>

namespace koheron {

{% for operation in driver.operations -%}
/////////////////////////////////////
// {{ operation['name'] }}

template<>
int Driver<driver_id_of<{{ driver.objects[0]["type"] }}>>::
        execute_operation<Driver<driver_id_of<{{ driver.objects[0]["type"] }}>>::{{ operation['tag'] }}>(Command& cmd)
{
    (void)cmd;
    {{ operation | get_parser(driver) }}
    {{ operation | get_fragment(driver) }}
}

{% endfor %}

int Driver<driver_id_of<{{ driver.objects[0]["type"] }}>>::execute(Command& cmd)
{
    std::lock_guard<std::mutex> lock(mutex);

    switch(cmd.operation) {
{% for operation in driver.operations -%}
      case {{ operation['tag'] }}: {
        return execute_operation<{{ operation['tag'] }}>(cmd);
      }
{% endfor %}
      case {{ driver.tag | lower }}_op_num:
      default:
          return -1;
    }
}

} // namespace koheron
